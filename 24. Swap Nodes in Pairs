/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        if(head==NULL) return NULL;                  // for input like [] or the last condition when node will not exist
        
        ListNode* temp=head;
        if(head->next){
            
            ListNode* other=head->next->next;       //it will point to null if it does not exist    and the first if codition will take care of null nodes
            
            head=head->next;
            head->next=temp;
            temp->next= swapPairs(other);
        }
        
        return head;
    }
};
/*Runtime: 0 ms, faster than 100.00% of C++ online submissions for Swap Nodes in Pairs.
Memory Usage: 7.5 MB, less than 92.21% of C++ online submissions for Swap Nodes in Pairs.*/
